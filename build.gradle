plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { // Do a barrel roll
        url = "https://api.modrinth.com/maven"
    	content {
            includeGroup "maven.modrinth"
        }
    }
	maven { // cicada lib, Lang files plus
        url = "https://maven.enjarai.nl/releases"
    	content {
            includeGroup "nl.enjarai"
			includeGroup "io.github.jacg311"
        }
    }
	maven { // Mixin extra
        url = "https://jitpack.io"
        content {
            includeGroup "com.github.LlamaLad7"
        }
    }
	maven { // Cloth config
        url = "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel.cloth"
        }
    }
	maven { // Yet another config lib
        url = "https://maven.isxander.dev/releases"
        content {
            includeGroup "dev.isxander"
        }
    }
	maven { // Mod menu
        url = "https://maven.terraformersmc.com"
        content {
            includeGroup "com.terraformersmc"
        }
    }
	maven { // Cardinal components api
        url = "https://maven.ladysnake.org/releases"
        content {
            includeGroup "dev.onyxstudios.cardinal-components-api"
        }
    }
	maven { // Fungible
        url = "https://maven.enjarai.nl/mirrors"
        content {
            includeGroup "net.darktree"
        }
    }
}

loom {
    splitEnvironmentSourceSets()
	mods {
		"doabarrelrollwithhud" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "nl.enjarai:do-a-barrel-roll:${project.doabarrelroll_version}"
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		
	}
}